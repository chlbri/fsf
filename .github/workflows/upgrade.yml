name: Admin Update

on:
  # Déclenchement manuel
  workflow_dispatch:
  # Cron chaque premier du mois à 9h UTC
  schedule:
    - cron: '0 4 1 * *'

jobs:
  admin-update:
    name: Execute CI Admin Scripts
    runs-on: ubuntu-latest
    # Exécuter seulement sur main/master pour les scheduled runs
    if:
      github.event_name != 'schedule' || github.ref == 'refs/heads/main' ||
      github.ref == 'refs/heads/master'
    outputs:
      changes-detected: ${{ steps.check-changes.outputs.changes }}

    steps:
      - name: Checkout pnpm repo
        uses: chlbri/pnpmi-action@main

      - name: Execute CI Admin
        run: pnpm run ci:admin

      - name: Check for changes
        id: check-changes
        run: |
          if git diff --quiet && git diff --cached --quiet; then
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Upload workspace
        if: steps.check-changes.outputs.changes == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: updated-workspace
          path: |
            .
            !node_modules
            !.git
          retention-days: 1

  bump-version:
    name: Bump Package Version
    runs-on: ubuntu-latest
    needs: admin-update
    if: needs.admin-update.outputs.changes-detected == 'true'
    outputs:
      newTag: ${{ steps.bump-version.outputs.newTag }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Download workspace
        uses: actions/download-artifact@v4
        with:
          name: updated-workspace
          path: .

      - name: Automated Version Bump
        uses: phips28/gh-action-bump-version@master
        id: bump-version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version-type: 'patch'
          patch-wording:
            'chore :,docs :,refactor :,perf :,test :,revert :,fix :'
          rc-wording: 'hotfix :,rc :,ci :,style :'
          minor-wording: 'feat :'
          major-wording: 'BREAKING CHANGE,MAJOR'
          skip-commit: 'true'
          skip-tag: 'true'
          skip-push: 'true'

      - name: Upload updated workspace with version
        uses: actions/upload-artifact@v4
        with:
          name: updated-workspace-with-version
          path: |
            .
            !node_modules
            !.git
          retention-days: 1

  commit-changes:
    name: Commit Changes
    runs-on: ubuntu-latest
    needs: [admin-update, bump-version]
    if: needs.admin-update.outputs.changes-detected == 'true'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Download workspace with version
        uses: actions/download-artifact@v4
        with:
          name: updated-workspace-with-version
          path: .

      - name: Commit changes with version bump
        uses: EndBug/add-and-commit@v9
        with:
          message: |
            chore(admin): Execute monthly admin maintenance scripts and bump version

            Exécute automatiquement les scripts de maintenance administrative mensuels et met à jour la version du package. Cette maintenance inclut la mise à jour des configurations, le nettoyage des fichiers et l'optimisation des performances.

            chlbri: bri_lvi@icloud.com
          author_name: '@chlbri'
          author_email: bri_lvi@icloud.com
          commit: --signoff
          add: '.'
          tag: 'v${{ needs.bump-version.outputs.newTag }}'
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload workspace
        uses: actions/upload-artifact@v4
        with:
          name: ready-workspace
          path: |
            .
            !node_modules
            !.git
          retention-days: 1

  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: [commit-changes, admin-update]
    if: needs.admin-update.outputs.changes-detected == 'true'

    steps:
      - name: Checkout pnpm repo
        uses: chlbri/pnpmi-action@main

      - name: Download workspace with version
        uses: actions/download-artifact@v4
        with:
          name: ready-workspace
          path: .

      - name: Build
        run: pnpm run build

      - uses: chlbri/npm-publish-action@main
        with:
          token: ${{ secrets.NPM_TOKEN }}
          access: public
          strategy: upgrade

  cleanup:
    name: Cleanup Artifacts
    runs-on: ubuntu-latest
    needs: [admin-update, bump-version, commit-changes, publish]
    if: needs.admin-update.outputs.changes-detected == 'true'
    permissions:
      actions: write
      contents: read

    steps:
      - name: Delete artifacts
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
                owner: context.repo.owner,
                repo: context.repo.repo,
                run_id: context.runId,
              });

              for (const artifact of artifacts.data.artifacts) {
                if (artifact.name === 'updated-workspace' || artifact.name === 'updated-workspace-with-version' || artifact.name === 'ready-workspace') {
                  console.log(`Deleting artifact: ${artifact.name} (ID: ${artifact.id})`);
                  await github.rest.actions.deleteArtifact({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    artifact_id: artifact.id,
                  });
                  console.log(`Successfully deleted artifact: ${artifact.name}`);
                }
              }
            } catch (error) {
              console.log(`Error during cleanup: ${error.message}`);
              // Ne pas faire échouer le workflow pour un problème de nettoyage
            }
